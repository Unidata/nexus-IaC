---
# Try to determine the latest available version and install that.
# If an older version of Nexus was previously installed, don't do anything. We don't (yet?) support upgrading.
nexus_version: 'latest'

# Where Nexus application data will be stored. Default value: '/var/nexus'
nexus_data_dir: '/var/opt/nexus'

# Location of the main Nexus log.
nexus_log: "{{ nexus_data_dir }}/log/nexus.log"

# Location where backups of databases and blob stores will go. Default value: '/var/nexus-backup'.
# '/var/backup' is not an appropriate place. See http://www.pathname.com/fhs/pub/fhs-2.3.html#REQUIREMENTS12
nexus_backup_dir: '/var/opt/nexus-backup'

# Accept connections from localhost only. Apache is acting as a reverse proxy; only it will talk directly to Nexus.
application_host: 127.0.0.1

# The password to set for the admin account.
nexus_admin_password: "{{ vault_nexus_admin_password }}"

# Delete the repositories that Nexus is configured with by default.
nexus_delete_default_repos: true

# See https://books.sonatype.com/nexus-book/reference3/security.html#anonymous
nexus_anonymous_access: true

# The fully qualified domain name under which the nexus instance will be accessible to its clients.
public_hostname: "{{ artifacts_hostname }}"

# Manage email server configuration.
nexus_email_server_enabled: true
nexus_email_server_host: "smtp.unidata.ucar.edu"
nexus_email_from_address: "nexus@artifacts.unidata.ucar.edu"
nexus_email_subject_prefix: "Task alert:"

# 'ansible_date_time.iso8601' is almost what we want, except that it gives times in UTC, e.g. "2017-06-14T07:23:21Z".
# We want them in 'ntp_timezone'. So, we need to create our own iso8601-ish timestamp. This will give something like:
# "2017-06-14T01:23:21 MDT".
timestamp: "{{ ansible_date_time.date }}T{{ ansible_date_time.time }} {{ ansible_date_time.tz }}"

# Use the same CSS for our footer that Sonatype uses for its copyright footer. This will cause our message to appear
# just below the copyright. I used the Chrome developer tools to find the right CSS classes.
nexus_branding_footer: "<div class='copyright nx-footer'>Last provisioned at {{ timestamp }}.</div>"

# We don't want the 'all-repos-read' privilege added by ansible-nexus3-oss, so set to empty list.
# Neither do we want to add any privileges of our own; the ones built into Nexus are sufficient.
nexus_privileges: []

nexus_roles:
  - id: developer
    name: developer
    description: Privileges required to deploy artifacts, plus search capabilities
    # See https://stackoverflow.com/questions/40966763/
    privileges:
      - nx-repository-view-*-*-add
      - nx-repository-view-*-*-browse
      - nx-repository-view-*-*-delete
      - nx-repository-view-*-*-edit
      - nx-repository-view-*-*-read
      - nx-search-read
    roles: []

nexus_local_users:
  - username: developer
    first_name: Developer
    last_name: User
    email: thredds-dev@unidata.ucar.edu
    password: "{{ vault_nexus_developer_password }}"
    roles:
      - developer


# Using the defaults in '_nexus_repos_maven_defaults' where appropriate.
nexus_repos_maven_hosted:
    # This was the name of the main Releases repo on the old Nexus v2. When we imported the repo into v3, the name
    # came with it, and v3 currently doesn't allow renaming of repos. Looks like we're stuck with this name.
  - name: unidata-releases
    version_policy: release

  - name: unidata-snapshots   # We're stuck with this name for the same reason.
    version_policy: snapshot

  - name: unidata-3rdparty    # Ditto.
    version_policy: release

# Using the defaults in '_nexus_repos_maven_defaults' where appropriate.
nexus_repos_maven_proxy:
  # For geotoolkit dependencies, which are needed by "ncwms". Gradle NEEDS a proxy repository for those JARs; it
  # cannot successfully retrieve them from the source repo itself. See this comment in thredds: https://goo.gl/aGGthZ
  - name: unidata-geotoolkit
    remote_url: https://nexus.geomatys.com/repository/geotoolkit/
    version_policy: mixed

# Using the defaults in '_nexus_repos_maven_defaults' where appropriate.
nexus_repos_maven_group:
  - name: unidata-all
    member_repos:
      - unidata-releases
      - unidata-snapshots
      - unidata-3rdparty
      - unidata-geotoolkit


nexus_config_raw: true  # Configure a raw repository.

# Using the defaults in '_nexus_repos_raw_defaults' where appropriate.
nexus_repos_raw_hosted:
  - name: thredds-doc
    write_policy: allow  # Raw artifacts can be redeployed, with new replacing old.

nexus_repos_raw_proxy: []  # Don't want ansible-nexus3-oss's default raw proxy repos.

nexus_repos_raw_group: []  # Don't want ansible-nexus3-oss's default raw group repos.


nexus_config_gitlfs: true  # Configure a gitlfs repository.

# Using the defaults in '_nexus_repos_gitlfs_defaults' where appropriate.
nexus_repos_gitlfs_hosted:
  - name: cdm-unit-test


nexus_scheduled_tasks:
  # See org.sonatype.nexus.internal.backup.DatabaseBackupTaskDescriptor
  - name: db.backup  # NOTE: This only backs up the databases. We must back up the blobstore separately.
    typeId: db.backup
    alertEmail: "{{ nexus_admin_email }}"
    schedule: manual
    properties:
      location: "{{ nexus_backup_dir }}"

  # See org.sonatype.nexus.repository.internal.blobstore.CompactBlobStoreTaskDescriptor
  - name: blobstore.compact
    typeId: blobstore.compact
    alertEmail: "{{ nexus_admin_email }}"
    schedule: advanced
    cronExpression: '0 0 2 * * ?'
    properties:
      blobstoreName: 'default'

  # See org.sonatype.nexus.repository.maven.tasks.RemoveSnapshotsTaskDescriptor
  - name: repository.maven.remove-snapshots
    typeId: repository.maven.remove-snapshots
    alertEmail: "{{ nexus_admin_email }}"
    schedule: advanced
    cronExpression: '0 0 1 * * ?'
    properties:
      # Maven repository or repository group to remove snapshots from.
      repositoryName: "{{ nexus_repos_maven_hosted[1].name }}"
      # Minimum number of snapshots to keep for one GAV.
      minimumRetained: 1
      # Purge all snapshots older than this, provided we still keep the minimum number specified.
      snapshotRetentionDays: 30
      # Purge all snapshots that have a corresponding release.
      removeIfReleased: false
      # The grace period during which snapshots with an associated release will not be purged.
      gracePeriodInDays: 7


# Values for the variables below are NOT CHANGED from the role defaults.
# However, the variables need to be redefined here so that they're visible to playbooks that don't include the role.

nexus_os_group: 'nexus'
nexus_os_user: 'nexus'
nexus_default_port: 8081
nexus_default_context_path: ''
nexus_private_base_url: "http://{{ application_host }}:{{ nexus_default_port }}{{ nexus_default_context_path }}"
rest_api_endpoint: "{{ nexus_private_base_url }}/service/rest/v1/script"


# The variables below are not actually defined in the role; they're new variables that logically belong with the rest.

# This will be where alert emails are sent when something goes wrong with one of our Nexus scheduled tasks.
nexus_admin_email: cwardgar@ucar.edu
