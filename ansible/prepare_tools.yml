---
- name: Install and configure software for interacting with cloud resources.
  hosts: localhost
  become: true

  vars:
    install_dir: /usr/local/bin
    packer_version: 1.2.2
    terraform_version: 0.11.5

    # These variables use double-quoted Flow-style multi-line strings.
    # See https://stackoverflow.com/questions/3790454/in-yaml-how-do-i-break-a-string-over-multiple-lines/
    packer_download_url: "https://releases.hashicorp.com/packer/{{ packer_version }}/\
                          packer_{{ packer_version }}_linux_amd64.zip"
    terraform_download_url: "https://releases.hashicorp.com/terraform/{{ terraform_version }}/\
                             terraform_{{ terraform_version }}_linux_amd64.zip"

  tasks:
    - name: Install 'pip' for Python packages and 'unzip' for extracting archives.
      package: "name={{ item }} state=latest"
      with_items: [ 'python-pip', 'unzip' ]

    - name: Install 'python-openstackclient' Python package for interacting with OpenStack.
      pip: name=python-openstackclient state=latest  # Needed by /scripts/delete_old_images.sh

    - name: Download and unpack Packer and Terraform.
      unarchive:
        src: "{{ item.url }}"
        dest: "{{ install_dir }}"
        creates: "{{ install_dir }}/{{ item.bin_name }}"
        remote_src: yes
      with_items:
        - { url: "{{ packer_download_url }}", bin_name: 'packer' }
        - { url: "{{ terraform_download_url }}", bin_name: 'terraform' }

    - name: Ensure home directories for OpenStack and AWS exist.
      file: path={{ item }} state=directory
      # We have "become: true" at the top of the playbook, which means that all tasks will be run as root.
      # When running as root, '~' will evaluate to '/root', and thus these directories will be created there.
      # However, we want them to live under '/home/ubuntu' instead, so we have to temporarily drop out of "become".
      become: false
      with_items: [ '~/.openstack', '~/.aws' ]

    - name: Decrypt credentials files and place them in their respective home directories.
      copy:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        mode: 0400
      # Ditto.
      become: false
      with_items:
        - { src: openrc.sh.enc,       dest: ~/.openstack/openrc.sh }
        - { src: aws_credentials.enc, dest: ~/.aws/credentials }
