---
- name: Create local bare repo to be used as a remote by Git LFS.
  command: git init --bare {{ local_remote_repo }}

- name: Create local repo that will test pushing objects to the Git LFS server.
  command: git init {{ test_lfs_push_dir }}

- name: Configure git 'user.name'.
  command: git config --global user.name '{{ nexus_local_users[0].first_name }} {{ nexus_local_users[0].last_name }}'

- name: Configure git 'user.email'.
  command: git config --global user.email '{{ nexus_local_users[0].username }}@{{ public_hostname }}'

- name: Configure Git LFS. Creates '.lfsconfig'.
  command: git config -f {{ test_lfs_push_dir }}/.lfsconfig lfs.url {{ lfs_url }}
  no_log: true  # Don't log 'lfs_url', which contains Nexus user credentials.

- name: Track NetCDF files with Git LFS. Creates '.gitattributes'.
  command: git lfs track '*.nc'
  args:
    chdir: "{{ test_lfs_push_dir }}"

- name: Copy large file to repo.
  copy: "src=jan.nc dest={{ test_lfs_push_dir }}/jan.nc"

- name: Stage all files for commit.
  command: git add --all
  args:
    chdir: "{{ test_lfs_push_dir }}"

- name: Commit all files.
  command: git commit -m "First commit."
  args:
    chdir: "{{ test_lfs_push_dir }}"

- name: Add a (local) remote repository to push to.
  command: git remote add origin {{ local_remote_repo }}
  args:
    chdir: "{{ test_lfs_push_dir }}"

- name: Push to the repo. This will upload the large file to Nexus.
  command: git push origin master
  args:
    chdir: "{{ test_lfs_push_dir }}"
  no_log: true  # Don't log 'lfs_url', which contains Nexus user credentials.

- name: "Get status of '{{ local_remote_repo }}' directory."
  stat: "path={{ local_remote_repo }}"
  register: local_remote_repo_stat
  tags: [ test-pull ]

- name: Clone the repo. This will download the large file from Nexus.
  git:
    # If 'local_remote_repo' doesn't exist, use the backup repo instead.
    # This will occur when the test.yml playbook is re-run with the 'test-pull' tag. See test.sh.
    repo: "{%- if local_remote_repo_stat.stat.exists -%}
             {{ local_remote_repo }}
           {%- else -%}
             {{ testing_dir }}-old/repo.git
           {%- endif -%}"
    dest: "{{ test_lfs_pull_dir }}"
  tags: [ test-pull ]

- name: Assert that the large file was downloaded during the clone, not a pointer file.
  stat:
    path: "{{ test_lfs_pull_dir }}/jan.nc"
  register: jan_stat
  failed_when: jan_stat.stat.size != 6580
  tags: [ test-pull ]
