---
- name: Playbook to backup databases and blobstore to Amazon S3.
  hosts: all
  gather_facts: false
  # Run playbook as 'nexus_os_user', which is NOT a member of the privileged 'wheel' group. This is intentional for
  # security purposes, but a consequence is that we cannot install any software packages via apt in this playbook.
  become: yes
  become_user: "{{ nexus_os_user }}"

  vars_files:
    - roles/ansible-nexus3-oss/defaults/main.yml  # For various Nexus variables.
    - roles/ansible-nexus3-oss/vars/main.yml      # Ditto.
    - vars/nexus.yml                              # Yep.
    - vars/backup-and-restore.yml
    - vars/vault.yml

  tasks:
    # Ansible doesn't have a good way to delete all of the files in a directory, because 'with_fileglob' operates on
    # the controller, NOT the target. And deleting/recreating 'nexus_backup_dir' is not an option because permissions
    # of the parent directory forbid it. So we must resort to shell commands. We're using 'find' instead of 'rm'
    # because the command 'rm {{ nexus_backup_dir }}/*' fails when the directory is empty.
    # See https://stackoverflow.com/questions/820760
    - name: Delete old database backups.
      command: find {{ nexus_backup_dir }} -mindepth 1 -delete

    - name: Run database backup task.  # Backup files will be written to 'nexus_backup_dir'.
      uri:
        url: "{{ rest_api_endpoint }}/tasks/run"
        user: 'admin'
        password: "{{ nexus_admin_password }}"
        headers:
          Content-Type: "text/plain"
        method: POST
        status_code: 200,204
        force_basic_auth: yes
        body: "{{ args | to_json }}"
        return_content: yes
      vars:
        args:
          methodName: run
          methodArgs:
            name: db.backup
      register: webpage
      failed_when: "'CHANGED' not in webpage.content"

    - name: Create directory to be synced to S3.
      file:
        path: "{{ sync_folder }}"
        state: directory

    - name: Create symlinks in '{{ sync_folder }}' to the actual backup data.
      file:
        path: "{{ item.path }}"
        src: "{{ item.src }}"
        state: link
      with_items:
        - { path: "{{ sync_folder }}/db",    src: "{{ nexus_backup_dir }}"     }
        - { path: "{{ sync_folder }}/blobs", src: "{{ nexus_data_dir }}/blobs" }

    # The AWS CLI package (which includes boto) is installed in 'prepare_ansible.yml'. That playbook MUST be run
    # before this one. As stated above, we can't do the installation here even if we wanted to.

    # A module named 's3_sync' exists for this purpose, but it lacks the functionality of the '--delete' flag.
    # It also may not have the '--follow-symlinks' behavior--I'm not sure.
    - name: Sync contents of '{{ sync_folder }}' to S3.
      command: aws s3 sync {{ sync_folder }} s3://unidata-test/nexus-backup --follow-symlinks --delete
      environment:
        AWS_ACCESS_KEY_ID: "{{ aws_access_key_id }}"
        AWS_SECRET_ACCESS_KEY: "{{ aws_secret_access_key }}"
